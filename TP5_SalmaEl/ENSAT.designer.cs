#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TP5_SalmaEl
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="gestionnotes2021V2")]
	public partial class ENSATDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Inserteleves(eleves instance);
    partial void Updateeleves(eleves instance);
    partial void Deleteeleves(eleves instance);
    partial void Insertfiliere(filiere instance);
    partial void Updatefiliere(filiere instance);
    partial void Deletefiliere(filiere instance);
    partial void Insertmatieres(matieres instance);
    partial void Updatematieres(matieres instance);
    partial void Deletematieres(matieres instance);
    partial void Insertmodule(module instance);
    partial void Updatemodule(module instance);
    partial void Deletemodule(module instance);
    partial void Insertmoyennes(moyennes instance);
    partial void Updatemoyennes(moyennes instance);
    partial void Deletemoyennes(moyennes instance);
    partial void InsertProfesseurs(Professeurs instance);
    partial void UpdateProfesseurs(Professeurs instance);
    partial void DeleteProfesseurs(Professeurs instance);
    partial void InsertQuestionT(QuestionT instance);
    partial void UpdateQuestionT(QuestionT instance);
    partial void DeleteQuestionT(QuestionT instance);
    partial void InsertQuizz(Quizz instance);
    partial void UpdateQuizz(Quizz instance);
    partial void DeleteQuizz(Quizz instance);
    partial void InsertReponseT(ReponseT instance);
    partial void UpdateReponseT(ReponseT instance);
    partial void DeleteReponseT(ReponseT instance);
    #endregion
		
		public ENSATDataContext() : 
				base(global::TP5_SalmaEl.Properties.Settings.Default.gestionnotes2021V2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ENSATDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ENSATDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ENSATDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ENSATDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<eleves> eleves
		{
			get
			{
				return this.GetTable<eleves>();
			}
		}
		
		public System.Data.Linq.Table<filiere> filiere
		{
			get
			{
				return this.GetTable<filiere>();
			}
		}
		
		public System.Data.Linq.Table<matieres> matieres
		{
			get
			{
				return this.GetTable<matieres>();
			}
		}
		
		public System.Data.Linq.Table<module> module
		{
			get
			{
				return this.GetTable<module>();
			}
		}
		
		public System.Data.Linq.Table<moyennes> moyennes
		{
			get
			{
				return this.GetTable<moyennes>();
			}
		}
		
		public System.Data.Linq.Table<notes2021> notes2021
		{
			get
			{
				return this.GetTable<notes2021>();
			}
		}
		
		public System.Data.Linq.Table<Professeurs> Professeurs
		{
			get
			{
				return this.GetTable<Professeurs>();
			}
		}
		
		public System.Data.Linq.Table<QuestionT> QuestionT
		{
			get
			{
				return this.GetTable<QuestionT>();
			}
		}
		
		public System.Data.Linq.Table<Quizz> Quizz
		{
			get
			{
				return this.GetTable<Quizz>();
			}
		}
		
		public System.Data.Linq.Table<ReponseT> ReponseT
		{
			get
			{
				return this.GetTable<ReponseT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eleves")]
	public partial class eleves : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codeElev;
		
		private string _nom;
		
		private string _prenom;
		
		private string _code_Fil;
		
		private string _niveau;
		
		private EntitySet<moyennes> _moyennes;
		
		private EntityRef<filiere> _filiere;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeElevChanging(string value);
    partial void OncodeElevChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void Oncode_FilChanging(string value);
    partial void Oncode_FilChanged();
    partial void OnniveauChanging(string value);
    partial void OnniveauChanged();
    #endregion
		
		public eleves()
		{
			this._moyennes = new EntitySet<moyennes>(new Action<moyennes>(this.attach_moyennes), new Action<moyennes>(this.detach_moyennes));
			this._filiere = default(EntityRef<filiere>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeElev", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codeElev
		{
			get
			{
				return this._codeElev;
			}
			set
			{
				if ((this._codeElev != value))
				{
					this.OncodeElevChanging(value);
					this.SendPropertyChanging();
					this._codeElev = value;
					this.SendPropertyChanged("codeElev");
					this.OncodeElevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(20)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="NVarChar(20)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_Fil", DbType="NVarChar(20)")]
		public string code_Fil
		{
			get
			{
				return this._code_Fil;
			}
			set
			{
				if ((this._code_Fil != value))
				{
					if (this._filiere.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncode_FilChanging(value);
					this.SendPropertyChanging();
					this._code_Fil = value;
					this.SendPropertyChanged("code_Fil");
					this.Oncode_FilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveau", DbType="NVarChar(21)")]
		public string niveau
		{
			get
			{
				return this._niveau;
			}
			set
			{
				if ((this._niveau != value))
				{
					this.OnniveauChanging(value);
					this.SendPropertyChanging();
					this._niveau = value;
					this.SendPropertyChanged("niveau");
					this.OnniveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eleves_moyennes", Storage="_moyennes", ThisKey="codeElev", OtherKey="codeElev")]
		public EntitySet<moyennes> moyennes
		{
			get
			{
				return this._moyennes;
			}
			set
			{
				this._moyennes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="filiere_eleves", Storage="_filiere", ThisKey="code_Fil", OtherKey="codeF", IsForeignKey=true)]
		public filiere filiere
		{
			get
			{
				return this._filiere.Entity;
			}
			set
			{
				filiere previousValue = this._filiere.Entity;
				if (((previousValue != value) 
							|| (this._filiere.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._filiere.Entity = null;
						previousValue.eleves.Remove(this);
					}
					this._filiere.Entity = value;
					if ((value != null))
					{
						value.eleves.Add(this);
						this._code_Fil = value.codeF;
					}
					else
					{
						this._code_Fil = default(string);
					}
					this.SendPropertyChanged("filiere");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_moyennes(moyennes entity)
		{
			this.SendPropertyChanging();
			entity.eleves = this;
		}
		
		private void detach_moyennes(moyennes entity)
		{
			this.SendPropertyChanging();
			entity.eleves = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.filiere")]
	public partial class filiere : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codeF;
		
		private string _designation;
		
		private EntitySet<eleves> _eleves;
		
		private EntitySet<module> _module;
		
		private EntitySet<moyennes> _moyennes;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeFChanging(string value);
    partial void OncodeFChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    #endregion
		
		public filiere()
		{
			this._eleves = new EntitySet<eleves>(new Action<eleves>(this.attach_eleves), new Action<eleves>(this.detach_eleves));
			this._module = new EntitySet<module>(new Action<module>(this.attach_module), new Action<module>(this.detach_module));
			this._moyennes = new EntitySet<moyennes>(new Action<moyennes>(this.attach_moyennes), new Action<moyennes>(this.detach_moyennes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeF", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codeF
		{
			get
			{
				return this._codeF;
			}
			set
			{
				if ((this._codeF != value))
				{
					this.OncodeFChanging(value);
					this.SendPropertyChanging();
					this._codeF = value;
					this.SendPropertyChanged("codeF");
					this.OncodeFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="NVarChar(40)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="filiere_eleves", Storage="_eleves", ThisKey="codeF", OtherKey="code_Fil")]
		public EntitySet<eleves> eleves
		{
			get
			{
				return this._eleves;
			}
			set
			{
				this._eleves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="filiere_module", Storage="_module", ThisKey="codeF", OtherKey="Cod_Fil")]
		public EntitySet<module> module
		{
			get
			{
				return this._module;
			}
			set
			{
				this._module.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="filiere_moyennes", Storage="_moyennes", ThisKey="codeF", OtherKey="codeF")]
		public EntitySet<moyennes> moyennes
		{
			get
			{
				return this._moyennes;
			}
			set
			{
				this._moyennes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_eleves(eleves entity)
		{
			this.SendPropertyChanging();
			entity.filiere = this;
		}
		
		private void detach_eleves(eleves entity)
		{
			this.SendPropertyChanging();
			entity.filiere = null;
		}
		
		private void attach_module(module entity)
		{
			this.SendPropertyChanging();
			entity.filiere = this;
		}
		
		private void detach_module(module entity)
		{
			this.SendPropertyChanging();
			entity.filiere = null;
		}
		
		private void attach_moyennes(moyennes entity)
		{
			this.SendPropertyChanging();
			entity.filiere = this;
		}
		
		private void detach_moyennes(moyennes entity)
		{
			this.SendPropertyChanging();
			entity.filiere = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.matieres")]
	public partial class matieres : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codeMat;
		
		private string _designation;
		
		private System.Nullable<double> _coeff;
		
		private string _codeModule;
		
		private string _RespMat;
		
		private EntitySet<Quizz> _Quizz;
		
		private EntityRef<module> _module;
		
		private EntityRef<Professeurs> _Professeurs;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeMatChanging(string value);
    partial void OncodeMatChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OncoeffChanging(System.Nullable<double> value);
    partial void OncoeffChanged();
    partial void OncodeModuleChanging(string value);
    partial void OncodeModuleChanged();
    partial void OnRespMatChanging(string value);
    partial void OnRespMatChanged();
    #endregion
		
		public matieres()
		{
			this._Quizz = new EntitySet<Quizz>(new Action<Quizz>(this.attach_Quizz), new Action<Quizz>(this.detach_Quizz));
			this._module = default(EntityRef<module>);
			this._Professeurs = default(EntityRef<Professeurs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeMat", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codeMat
		{
			get
			{
				return this._codeMat;
			}
			set
			{
				if ((this._codeMat != value))
				{
					this.OncodeMatChanging(value);
					this.SendPropertyChanging();
					this._codeMat = value;
					this.SendPropertyChanged("codeMat");
					this.OncodeMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="NVarChar(40)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coeff", DbType="Float")]
		public System.Nullable<double> coeff
		{
			get
			{
				return this._coeff;
			}
			set
			{
				if ((this._coeff != value))
				{
					this.OncoeffChanging(value);
					this.SendPropertyChanging();
					this._coeff = value;
					this.SendPropertyChanged("coeff");
					this.OncoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeModule", DbType="NVarChar(20)")]
		public string codeModule
		{
			get
			{
				return this._codeModule;
			}
			set
			{
				if ((this._codeModule != value))
				{
					if (this._module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodeModuleChanging(value);
					this.SendPropertyChanging();
					this._codeModule = value;
					this.SendPropertyChanged("codeModule");
					this.OncodeModuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RespMat", DbType="NVarChar(20)")]
		public string RespMat
		{
			get
			{
				return this._RespMat;
			}
			set
			{
				if ((this._RespMat != value))
				{
					if (this._Professeurs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRespMatChanging(value);
					this.SendPropertyChanging();
					this._RespMat = value;
					this.SendPropertyChanged("RespMat");
					this.OnRespMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="matieres_Quizz", Storage="_Quizz", ThisKey="codeMat", OtherKey="IDmat")]
		public EntitySet<Quizz> Quizz
		{
			get
			{
				return this._Quizz;
			}
			set
			{
				this._Quizz.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="module_matieres", Storage="_module", ThisKey="codeModule", OtherKey="codeModul", IsForeignKey=true)]
		public module module
		{
			get
			{
				return this._module.Entity;
			}
			set
			{
				module previousValue = this._module.Entity;
				if (((previousValue != value) 
							|| (this._module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._module.Entity = null;
						previousValue.matieres.Remove(this);
					}
					this._module.Entity = value;
					if ((value != null))
					{
						value.matieres.Add(this);
						this._codeModule = value.codeModul;
					}
					else
					{
						this._codeModule = default(string);
					}
					this.SendPropertyChanged("module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professeurs_matieres", Storage="_Professeurs", ThisKey="RespMat", OtherKey="ID", IsForeignKey=true)]
		public Professeurs Professeurs
		{
			get
			{
				return this._Professeurs.Entity;
			}
			set
			{
				Professeurs previousValue = this._Professeurs.Entity;
				if (((previousValue != value) 
							|| (this._Professeurs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professeurs.Entity = null;
						previousValue.matieres.Remove(this);
					}
					this._Professeurs.Entity = value;
					if ((value != null))
					{
						value.matieres.Add(this);
						this._RespMat = value.ID;
					}
					else
					{
						this._RespMat = default(string);
					}
					this.SendPropertyChanged("Professeurs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Quizz(Quizz entity)
		{
			this.SendPropertyChanging();
			entity.matieres = this;
		}
		
		private void detach_Quizz(Quizz entity)
		{
			this.SendPropertyChanging();
			entity.matieres = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.module")]
	public partial class module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codeModul;
		
		private string _Designation;
		
		private string _niveau;
		
		private System.Nullable<int> _NombreMatieres;
		
		private string _Semestre;
		
		private string _Responsable;
		
		private string _Cod_Fil;
		
		private EntitySet<matieres> _matieres;
		
		private EntityRef<filiere> _filiere;
		
		private EntityRef<Professeurs> _Professeurs;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeModulChanging(string value);
    partial void OncodeModulChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnniveauChanging(string value);
    partial void OnniveauChanged();
    partial void OnNombreMatieresChanging(System.Nullable<int> value);
    partial void OnNombreMatieresChanged();
    partial void OnSemestreChanging(string value);
    partial void OnSemestreChanged();
    partial void OnResponsableChanging(string value);
    partial void OnResponsableChanged();
    partial void OnCod_FilChanging(string value);
    partial void OnCod_FilChanged();
    #endregion
		
		public module()
		{
			this._matieres = new EntitySet<matieres>(new Action<matieres>(this.attach_matieres), new Action<matieres>(this.detach_matieres));
			this._filiere = default(EntityRef<filiere>);
			this._Professeurs = default(EntityRef<Professeurs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeModul", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codeModul
		{
			get
			{
				return this._codeModul;
			}
			set
			{
				if ((this._codeModul != value))
				{
					this.OncodeModulChanging(value);
					this.SendPropertyChanging();
					this._codeModul = value;
					this.SendPropertyChanged("codeModul");
					this.OncodeModulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(40)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveau", DbType="NVarChar(10)")]
		public string niveau
		{
			get
			{
				return this._niveau;
			}
			set
			{
				if ((this._niveau != value))
				{
					this.OnniveauChanging(value);
					this.SendPropertyChanging();
					this._niveau = value;
					this.SendPropertyChanged("niveau");
					this.OnniveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreMatieres", DbType="Int")]
		public System.Nullable<int> NombreMatieres
		{
			get
			{
				return this._NombreMatieres;
			}
			set
			{
				if ((this._NombreMatieres != value))
				{
					this.OnNombreMatieresChanging(value);
					this.SendPropertyChanging();
					this._NombreMatieres = value;
					this.SendPropertyChanged("NombreMatieres");
					this.OnNombreMatieresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semestre", DbType="NVarChar(20)")]
		public string Semestre
		{
			get
			{
				return this._Semestre;
			}
			set
			{
				if ((this._Semestre != value))
				{
					this.OnSemestreChanging(value);
					this.SendPropertyChanging();
					this._Semestre = value;
					this.SendPropertyChanged("Semestre");
					this.OnSemestreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsable", DbType="NVarChar(20)")]
		public string Responsable
		{
			get
			{
				return this._Responsable;
			}
			set
			{
				if ((this._Responsable != value))
				{
					if (this._Professeurs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsableChanging(value);
					this.SendPropertyChanging();
					this._Responsable = value;
					this.SendPropertyChanged("Responsable");
					this.OnResponsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cod_Fil", DbType="NVarChar(20)")]
		public string Cod_Fil
		{
			get
			{
				return this._Cod_Fil;
			}
			set
			{
				if ((this._Cod_Fil != value))
				{
					if (this._filiere.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCod_FilChanging(value);
					this.SendPropertyChanging();
					this._Cod_Fil = value;
					this.SendPropertyChanged("Cod_Fil");
					this.OnCod_FilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="module_matieres", Storage="_matieres", ThisKey="codeModul", OtherKey="codeModule")]
		public EntitySet<matieres> matieres
		{
			get
			{
				return this._matieres;
			}
			set
			{
				this._matieres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="filiere_module", Storage="_filiere", ThisKey="Cod_Fil", OtherKey="codeF", IsForeignKey=true)]
		public filiere filiere
		{
			get
			{
				return this._filiere.Entity;
			}
			set
			{
				filiere previousValue = this._filiere.Entity;
				if (((previousValue != value) 
							|| (this._filiere.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._filiere.Entity = null;
						previousValue.module.Remove(this);
					}
					this._filiere.Entity = value;
					if ((value != null))
					{
						value.module.Add(this);
						this._Cod_Fil = value.codeF;
					}
					else
					{
						this._Cod_Fil = default(string);
					}
					this.SendPropertyChanged("filiere");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professeurs_module", Storage="_Professeurs", ThisKey="Responsable", OtherKey="ID", IsForeignKey=true)]
		public Professeurs Professeurs
		{
			get
			{
				return this._Professeurs.Entity;
			}
			set
			{
				Professeurs previousValue = this._Professeurs.Entity;
				if (((previousValue != value) 
							|| (this._Professeurs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professeurs.Entity = null;
						previousValue.module.Remove(this);
					}
					this._Professeurs.Entity = value;
					if ((value != null))
					{
						value.module.Add(this);
						this._Responsable = value.ID;
					}
					else
					{
						this._Responsable = default(string);
					}
					this.SendPropertyChanged("Professeurs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_matieres(matieres entity)
		{
			this.SendPropertyChanging();
			entity.module = this;
		}
		
		private void detach_matieres(matieres entity)
		{
			this.SendPropertyChanging();
			entity.module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.moyennes")]
	public partial class moyennes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codeElev;
		
		private string _codeF;
		
		private string _niveau;
		
		private System.Nullable<double> _Moyenne_Ann;
		
		private string _IDquiz;
		
		private EntityRef<eleves> _eleves;
		
		private EntityRef<filiere> _filiere;
		
		private EntityRef<Quizz> _Quizz;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeElevChanging(string value);
    partial void OncodeElevChanged();
    partial void OncodeFChanging(string value);
    partial void OncodeFChanged();
    partial void OnniveauChanging(string value);
    partial void OnniveauChanged();
    partial void OnMoyenne_AnnChanging(System.Nullable<double> value);
    partial void OnMoyenne_AnnChanged();
    partial void OnIDquizChanging(string value);
    partial void OnIDquizChanged();
    #endregion
		
		public moyennes()
		{
			this._eleves = default(EntityRef<eleves>);
			this._filiere = default(EntityRef<filiere>);
			this._Quizz = default(EntityRef<Quizz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeElev", DbType="NVarChar(20)")]
		public string codeElev
		{
			get
			{
				return this._codeElev;
			}
			set
			{
				if ((this._codeElev != value))
				{
					if (this._eleves.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodeElevChanging(value);
					this.SendPropertyChanging();
					this._codeElev = value;
					this.SendPropertyChanged("codeElev");
					this.OncodeElevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeF", DbType="NVarChar(20)")]
		public string codeF
		{
			get
			{
				return this._codeF;
			}
			set
			{
				if ((this._codeF != value))
				{
					if (this._filiere.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodeFChanging(value);
					this.SendPropertyChanging();
					this._codeF = value;
					this.SendPropertyChanged("codeF");
					this.OncodeFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveau", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string niveau
		{
			get
			{
				return this._niveau;
			}
			set
			{
				if ((this._niveau != value))
				{
					this.OnniveauChanging(value);
					this.SendPropertyChanging();
					this._niveau = value;
					this.SendPropertyChanged("niveau");
					this.OnniveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moyenne_Ann", DbType="Float")]
		public System.Nullable<double> Moyenne_Ann
		{
			get
			{
				return this._Moyenne_Ann;
			}
			set
			{
				if ((this._Moyenne_Ann != value))
				{
					this.OnMoyenne_AnnChanging(value);
					this.SendPropertyChanging();
					this._Moyenne_Ann = value;
					this.SendPropertyChanged("Moyenne_Ann");
					this.OnMoyenne_AnnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDquiz", DbType="NVarChar(20)")]
		public string IDquiz
		{
			get
			{
				return this._IDquiz;
			}
			set
			{
				if ((this._IDquiz != value))
				{
					if (this._Quizz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDquizChanging(value);
					this.SendPropertyChanging();
					this._IDquiz = value;
					this.SendPropertyChanged("IDquiz");
					this.OnIDquizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eleves_moyennes", Storage="_eleves", ThisKey="codeElev", OtherKey="codeElev", IsForeignKey=true)]
		public eleves eleves
		{
			get
			{
				return this._eleves.Entity;
			}
			set
			{
				eleves previousValue = this._eleves.Entity;
				if (((previousValue != value) 
							|| (this._eleves.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eleves.Entity = null;
						previousValue.moyennes.Remove(this);
					}
					this._eleves.Entity = value;
					if ((value != null))
					{
						value.moyennes.Add(this);
						this._codeElev = value.codeElev;
					}
					else
					{
						this._codeElev = default(string);
					}
					this.SendPropertyChanged("eleves");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="filiere_moyennes", Storage="_filiere", ThisKey="codeF", OtherKey="codeF", IsForeignKey=true)]
		public filiere filiere
		{
			get
			{
				return this._filiere.Entity;
			}
			set
			{
				filiere previousValue = this._filiere.Entity;
				if (((previousValue != value) 
							|| (this._filiere.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._filiere.Entity = null;
						previousValue.moyennes.Remove(this);
					}
					this._filiere.Entity = value;
					if ((value != null))
					{
						value.moyennes.Add(this);
						this._codeF = value.codeF;
					}
					else
					{
						this._codeF = default(string);
					}
					this.SendPropertyChanged("filiere");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quizz_moyennes", Storage="_Quizz", ThisKey="IDquiz", OtherKey="IDquiz", IsForeignKey=true)]
		public Quizz Quizz
		{
			get
			{
				return this._Quizz.Entity;
			}
			set
			{
				Quizz previousValue = this._Quizz.Entity;
				if (((previousValue != value) 
							|| (this._Quizz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quizz.Entity = null;
						previousValue.moyennes.Remove(this);
					}
					this._Quizz.Entity = value;
					if ((value != null))
					{
						value.moyennes.Add(this);
						this._IDquiz = value.IDquiz;
					}
					else
					{
						this._IDquiz = default(string);
					}
					this.SendPropertyChanged("Quizz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.notes2021")]
	public partial class notes2021
	{
		
		private string _codeElev;
		
		private string _codeMat;
		
		private System.Nullable<double> _note;
		
		public notes2021()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeElev", DbType="NVarChar(20)")]
		public string codeElev
		{
			get
			{
				return this._codeElev;
			}
			set
			{
				if ((this._codeElev != value))
				{
					this._codeElev = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeMat", DbType="NVarChar(20)")]
		public string codeMat
		{
			get
			{
				return this._codeMat;
			}
			set
			{
				if ((this._codeMat != value))
				{
					this._codeMat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="Float")]
		public System.Nullable<double> note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this._note = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Professeurs")]
	public partial class Professeurs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _nomP;
		
		private string _prenomP;
		
		private EntitySet<matieres> _matieres;
		
		private EntitySet<module> _module;
		
		private EntitySet<Quizz> _Quizz;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnnomPChanging(string value);
    partial void OnnomPChanged();
    partial void OnprenomPChanging(string value);
    partial void OnprenomPChanged();
    #endregion
		
		public Professeurs()
		{
			this._matieres = new EntitySet<matieres>(new Action<matieres>(this.attach_matieres), new Action<matieres>(this.detach_matieres));
			this._module = new EntitySet<module>(new Action<module>(this.attach_module), new Action<module>(this.detach_module));
			this._Quizz = new EntitySet<Quizz>(new Action<Quizz>(this.attach_Quizz), new Action<Quizz>(this.detach_Quizz));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomP", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nomP
		{
			get
			{
				return this._nomP;
			}
			set
			{
				if ((this._nomP != value))
				{
					this.OnnomPChanging(value);
					this.SendPropertyChanging();
					this._nomP = value;
					this.SendPropertyChanged("nomP");
					this.OnnomPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenomP", DbType="NVarChar(20)")]
		public string prenomP
		{
			get
			{
				return this._prenomP;
			}
			set
			{
				if ((this._prenomP != value))
				{
					this.OnprenomPChanging(value);
					this.SendPropertyChanging();
					this._prenomP = value;
					this.SendPropertyChanged("prenomP");
					this.OnprenomPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professeurs_matieres", Storage="_matieres", ThisKey="ID", OtherKey="RespMat")]
		public EntitySet<matieres> matieres
		{
			get
			{
				return this._matieres;
			}
			set
			{
				this._matieres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professeurs_module", Storage="_module", ThisKey="ID", OtherKey="Responsable")]
		public EntitySet<module> module
		{
			get
			{
				return this._module;
			}
			set
			{
				this._module.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professeurs_Quizz", Storage="_Quizz", ThisKey="ID", OtherKey="IDprof")]
		public EntitySet<Quizz> Quizz
		{
			get
			{
				return this._Quizz;
			}
			set
			{
				this._Quizz.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_matieres(matieres entity)
		{
			this.SendPropertyChanging();
			entity.Professeurs = this;
		}
		
		private void detach_matieres(matieres entity)
		{
			this.SendPropertyChanging();
			entity.Professeurs = null;
		}
		
		private void attach_module(module entity)
		{
			this.SendPropertyChanging();
			entity.Professeurs = this;
		}
		
		private void detach_module(module entity)
		{
			this.SendPropertyChanging();
			entity.Professeurs = null;
		}
		
		private void attach_Quizz(Quizz entity)
		{
			this.SendPropertyChanging();
			entity.Professeurs = this;
		}
		
		private void detach_Quizz(Quizz entity)
		{
			this.SendPropertyChanging();
			entity.Professeurs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionT")]
	public partial class QuestionT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDquestion;
		
		private string _IDquizz;
		
		private string _Question;
		
		private System.Nullable<double> _poids;
		
		private EntitySet<ReponseT> _ReponseT;
		
		private EntityRef<Quizz> _Quizz;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDquestionChanging(string value);
    partial void OnIDquestionChanged();
    partial void OnIDquizzChanging(string value);
    partial void OnIDquizzChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnpoidsChanging(System.Nullable<double> value);
    partial void OnpoidsChanged();
    #endregion
		
		public QuestionT()
		{
			this._ReponseT = new EntitySet<ReponseT>(new Action<ReponseT>(this.attach_ReponseT), new Action<ReponseT>(this.detach_ReponseT));
			this._Quizz = default(EntityRef<Quizz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDquestion", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDquestion
		{
			get
			{
				return this._IDquestion;
			}
			set
			{
				if ((this._IDquestion != value))
				{
					this.OnIDquestionChanging(value);
					this.SendPropertyChanging();
					this._IDquestion = value;
					this.SendPropertyChanged("IDquestion");
					this.OnIDquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDquizz", DbType="NVarChar(20)")]
		public string IDquizz
		{
			get
			{
				return this._IDquizz;
			}
			set
			{
				if ((this._IDquizz != value))
				{
					if (this._Quizz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDquizzChanging(value);
					this.SendPropertyChanging();
					this._IDquizz = value;
					this.SendPropertyChanged("IDquizz");
					this.OnIDquizzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_poids", DbType="Float")]
		public System.Nullable<double> poids
		{
			get
			{
				return this._poids;
			}
			set
			{
				if ((this._poids != value))
				{
					this.OnpoidsChanging(value);
					this.SendPropertyChanging();
					this._poids = value;
					this.SendPropertyChanged("poids");
					this.OnpoidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionT_ReponseT", Storage="_ReponseT", ThisKey="IDquestion", OtherKey="IDquestion")]
		public EntitySet<ReponseT> ReponseT
		{
			get
			{
				return this._ReponseT;
			}
			set
			{
				this._ReponseT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quizz_QuestionT", Storage="_Quizz", ThisKey="IDquizz", OtherKey="IDquiz", IsForeignKey=true)]
		public Quizz Quizz
		{
			get
			{
				return this._Quizz.Entity;
			}
			set
			{
				Quizz previousValue = this._Quizz.Entity;
				if (((previousValue != value) 
							|| (this._Quizz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quizz.Entity = null;
						previousValue.QuestionT.Remove(this);
					}
					this._Quizz.Entity = value;
					if ((value != null))
					{
						value.QuestionT.Add(this);
						this._IDquizz = value.IDquiz;
					}
					else
					{
						this._IDquizz = default(string);
					}
					this.SendPropertyChanged("Quizz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReponseT(ReponseT entity)
		{
			this.SendPropertyChanging();
			entity.QuestionT = this;
		}
		
		private void detach_ReponseT(ReponseT entity)
		{
			this.SendPropertyChanging();
			entity.QuestionT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quizz")]
	public partial class Quizz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDquiz;
		
		private string _IDmat;
		
		private string _IDprof;
		
		private string _Designation;
		
		private EntitySet<moyennes> _moyennes;
		
		private EntitySet<QuestionT> _QuestionT;
		
		private EntityRef<matieres> _matieres;
		
		private EntityRef<Professeurs> _Professeurs;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDquizChanging(string value);
    partial void OnIDquizChanged();
    partial void OnIDmatChanging(string value);
    partial void OnIDmatChanged();
    partial void OnIDprofChanging(string value);
    partial void OnIDprofChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
		
		public Quizz()
		{
			this._moyennes = new EntitySet<moyennes>(new Action<moyennes>(this.attach_moyennes), new Action<moyennes>(this.detach_moyennes));
			this._QuestionT = new EntitySet<QuestionT>(new Action<QuestionT>(this.attach_QuestionT), new Action<QuestionT>(this.detach_QuestionT));
			this._matieres = default(EntityRef<matieres>);
			this._Professeurs = default(EntityRef<Professeurs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDquiz", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDquiz
		{
			get
			{
				return this._IDquiz;
			}
			set
			{
				if ((this._IDquiz != value))
				{
					this.OnIDquizChanging(value);
					this.SendPropertyChanging();
					this._IDquiz = value;
					this.SendPropertyChanged("IDquiz");
					this.OnIDquizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDmat", DbType="NVarChar(20)")]
		public string IDmat
		{
			get
			{
				return this._IDmat;
			}
			set
			{
				if ((this._IDmat != value))
				{
					if (this._matieres.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDmatChanging(value);
					this.SendPropertyChanging();
					this._IDmat = value;
					this.SendPropertyChanged("IDmat");
					this.OnIDmatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprof", DbType="NVarChar(20)")]
		public string IDprof
		{
			get
			{
				return this._IDprof;
			}
			set
			{
				if ((this._IDprof != value))
				{
					if (this._Professeurs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDprofChanging(value);
					this.SendPropertyChanging();
					this._IDprof = value;
					this.SendPropertyChanged("IDprof");
					this.OnIDprofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(50)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quizz_moyennes", Storage="_moyennes", ThisKey="IDquiz", OtherKey="IDquiz")]
		public EntitySet<moyennes> moyennes
		{
			get
			{
				return this._moyennes;
			}
			set
			{
				this._moyennes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quizz_QuestionT", Storage="_QuestionT", ThisKey="IDquiz", OtherKey="IDquizz")]
		public EntitySet<QuestionT> QuestionT
		{
			get
			{
				return this._QuestionT;
			}
			set
			{
				this._QuestionT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="matieres_Quizz", Storage="_matieres", ThisKey="IDmat", OtherKey="codeMat", IsForeignKey=true)]
		public matieres matieres
		{
			get
			{
				return this._matieres.Entity;
			}
			set
			{
				matieres previousValue = this._matieres.Entity;
				if (((previousValue != value) 
							|| (this._matieres.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._matieres.Entity = null;
						previousValue.Quizz.Remove(this);
					}
					this._matieres.Entity = value;
					if ((value != null))
					{
						value.Quizz.Add(this);
						this._IDmat = value.codeMat;
					}
					else
					{
						this._IDmat = default(string);
					}
					this.SendPropertyChanged("matieres");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professeurs_Quizz", Storage="_Professeurs", ThisKey="IDprof", OtherKey="ID", IsForeignKey=true)]
		public Professeurs Professeurs
		{
			get
			{
				return this._Professeurs.Entity;
			}
			set
			{
				Professeurs previousValue = this._Professeurs.Entity;
				if (((previousValue != value) 
							|| (this._Professeurs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professeurs.Entity = null;
						previousValue.Quizz.Remove(this);
					}
					this._Professeurs.Entity = value;
					if ((value != null))
					{
						value.Quizz.Add(this);
						this._IDprof = value.ID;
					}
					else
					{
						this._IDprof = default(string);
					}
					this.SendPropertyChanged("Professeurs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_moyennes(moyennes entity)
		{
			this.SendPropertyChanging();
			entity.Quizz = this;
		}
		
		private void detach_moyennes(moyennes entity)
		{
			this.SendPropertyChanging();
			entity.Quizz = null;
		}
		
		private void attach_QuestionT(QuestionT entity)
		{
			this.SendPropertyChanging();
			entity.Quizz = this;
		}
		
		private void detach_QuestionT(QuestionT entity)
		{
			this.SendPropertyChanging();
			entity.Quizz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReponseT")]
	public partial class ReponseT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDreponse;
		
		private string _IDquestion;
		
		private string _Reponse;
		
		private string _Statut;
		
		private EntityRef<QuestionT> _QuestionT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDreponseChanging(string value);
    partial void OnIDreponseChanged();
    partial void OnIDquestionChanging(string value);
    partial void OnIDquestionChanged();
    partial void OnReponseChanging(string value);
    partial void OnReponseChanged();
    partial void OnStatutChanging(string value);
    partial void OnStatutChanged();
    #endregion
		
		public ReponseT()
		{
			this._QuestionT = default(EntityRef<QuestionT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDreponse", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDreponse
		{
			get
			{
				return this._IDreponse;
			}
			set
			{
				if ((this._IDreponse != value))
				{
					this.OnIDreponseChanging(value);
					this.SendPropertyChanging();
					this._IDreponse = value;
					this.SendPropertyChanged("IDreponse");
					this.OnIDreponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDquestion", DbType="NVarChar(20)")]
		public string IDquestion
		{
			get
			{
				return this._IDquestion;
			}
			set
			{
				if ((this._IDquestion != value))
				{
					if (this._QuestionT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDquestionChanging(value);
					this.SendPropertyChanging();
					this._IDquestion = value;
					this.SendPropertyChanged("IDquestion");
					this.OnIDquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reponse", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Reponse
		{
			get
			{
				return this._Reponse;
			}
			set
			{
				if ((this._Reponse != value))
				{
					this.OnReponseChanging(value);
					this.SendPropertyChanging();
					this._Reponse = value;
					this.SendPropertyChanged("Reponse");
					this.OnReponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="NVarChar(10)")]
		public string Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionT_ReponseT", Storage="_QuestionT", ThisKey="IDquestion", OtherKey="IDquestion", IsForeignKey=true)]
		public QuestionT QuestionT
		{
			get
			{
				return this._QuestionT.Entity;
			}
			set
			{
				QuestionT previousValue = this._QuestionT.Entity;
				if (((previousValue != value) 
							|| (this._QuestionT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionT.Entity = null;
						previousValue.ReponseT.Remove(this);
					}
					this._QuestionT.Entity = value;
					if ((value != null))
					{
						value.ReponseT.Add(this);
						this._IDquestion = value.IDquestion;
					}
					else
					{
						this._IDquestion = default(string);
					}
					this.SendPropertyChanged("QuestionT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
